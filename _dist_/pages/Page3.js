/* src/pages/Page3.svelte generated by Svelte v3.31.2 */
import {
	HtmlTag,
	SvelteComponent,
	add_render_callback,
	append,
	create_in_transition,
	detach,
	element,
	empty,
	handle_promise,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "../../web_modules/svelte/internal.js";

import { fade } from "../../web_modules/svelte/transition.js";

function get_then_context(ctx) {
	ctx[2] = ctx[3].default.text;
}

// (1:0) <script lang="ts">import { fade }
function create_catch_block(ctx) {
	return { c: noop, m: noop, p: noop, d: noop };
}

// (11:2) {:then { default: { text }
function create_then_block(ctx) {
	get_then_context(ctx);
	let html_tag;
	let raw_value = /*text*/ ctx[2].map(func).join("") + "";
	let html_anchor;

	return {
		c() {
			html_anchor = empty();
			html_tag = new HtmlTag(html_anchor);
		},
		m(target, anchor) {
			html_tag.m(raw_value, target, anchor);
			insert(target, html_anchor, anchor);
		},
		p(ctx, dirty) {
			get_then_context(ctx);
		},
		d(detaching) {
			if (detaching) detach(html_anchor);
			if (detaching) html_tag.d();
		}
	};
}

// (9:18)      <h5>getting meat...</h5>   {:then { default: { text }
function create_pending_block(ctx) {
	let h5;

	return {
		c() {
			h5 = element("h5");
			h5.textContent = "getting meat...";
		},
		m(target, anchor) {
			insert(target, h5, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(h5);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let h3;
	let t1;
	let promise;
	let div_intro;

	let info = {
		ctx,
		current: null,
		token: null,
		hasCatch: false,
		pending: create_pending_block,
		then: create_then_block,
		catch: create_catch_block,
		value: 3
	};

	handle_promise(promise = /*content*/ ctx[0], info);

	return {
		c() {
			div = element("div");
			h3 = element("h3");
			h3.textContent = "very good page 3";
			t1 = space();
			info.block.c();
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, h3);
			append(div, t1);
			info.block.m(div, info.anchor = null);
			info.mount = () => div;
			info.anchor = null;
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			{
				const child_ctx = ctx.slice();
				child_ctx[3] = info.resolved;
				info.block.p(child_ctx, dirty);
			}
		},
		i(local) {
			if (!div_intro) {
				add_render_callback(() => {
					div_intro = create_in_transition(div, fade, { duration: 100 });
					div_intro.start();
				});
			}
		},
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
			info.block.d();
			info.token = null;
			info = null;
		}
	};
}

const func = para => `<p>${para}</p>`;

function instance($$self) {
	const getContent = async () => await import("../assets/meat.json.proxy.js");
	const content = getContent();
	return [content];
}

class Page3 extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Page3;